name: CI-CD (Build -> Scan -> Push -> GitOps Update)

on:
  push:
    branches:
      - main
      - master
  repository_dispatch:
    types: [deploy, build-and-deploy, trigger-ci]

permissions:
  contents: write # required for the workflow to push back updated kustomization
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Display trigger info
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "Dispatch event type: ${{ github.event.action }}"
            echo "Client payload: ${{ toJson(github.event.client_payload) }}"
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build with Maven
        run: mvn -B clean compile

      - name: Run tests
        run: mvn -B test

      - name: Package application
        run: mvn -B package -DskipTests

      - name: Run SpotBugs (static analysis)
        run: mvn com.github.spotbugs:spotbugs-maven-plugin:check

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push image
        id: build-image
        run: |
          IMAGE_NAME=${{ secrets.REGISTRY }}/${{ github.repository_owner }}/cloudwave-api
          TAG=${{ github.sha }}
          echo "IMAGE=${IMAGE_NAME}:${TAG}" >> $GITHUB_OUTPUT
          docker build -t $IMAGE_NAME:${TAG} .
          docker push $IMAGE_NAME:${TAG}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.build-image.outputs.IMAGE }}
          format: "table"
          exit-code: "1" # set to 1 to fail job on high severity findings; tune as needed
          vuln-type: "os,library"

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Helm lint
        run: |
          helm lint charts/myapp || true

      - name: Update kustomize image tag in overlay
        env:
          IMAGE: ${{ steps.build-image.outputs.IMAGE }}
        run: |
          echo "Updating kustomization with image $IMAGE"
          FILE=k8s/overlays/dev/kustomization.yaml
          # Simple sed replace for newTag
          sed -i "s/newTag: .*/newTag: \"${{ github.sha }}\"/" $FILE

      - name: Commit and push kustomization update
        env:
          GIT_AUTHOR_NAME: "github-actions[bot]"
          GIT_AUTHOR_EMAIL: "github-actions[bot]@users.noreply.github.com"
        run: |
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          git add k8s/overlays/dev/kustomization.yaml
          git commit -m "chore: bump image tag to ${{ github.sha }}" || echo "no changes to commit"
          git push origin HEAD:${{ github.ref_name }}
